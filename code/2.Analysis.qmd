---
title: "Analysis"
format: html
editor: visual
---

### ==============================================

### Analysis Script

### This script performs regression analysis and climate scenario simulations:

### - Using retrieved pastureland and cattle inventory data estimate stocking rates

### - Estimate regression model

### - Simulates future stocking rates under different climate scenarios

### ===============================================

### 1. Estimate Stocking Rates

```{r}

# Assumptions
dressing_pct <- 0.55
AU <- 1000
grazing_months <- 5 

# Merge pasturepand and inventory data
merged_ALL <- left_join(pasture_data_ALL, beef_inv, by = c("year", "state", "county")) 

# Estimate Stocking rates
merged_ALL_SR <- left_join(merged_ALL, cattle_weight, by = c("year")) %>% 
  mutate(stock_rate = (beef_inv * mean_live_wt/AU * grazing_months)/pastureland_all_types) %>% 
  dplyr::filter(year != 1978) %>% 
  dplyr::select(year, state, county, stock_rate) %>% 
  na.omit()

```

### 2. Estimate regression model

```{r}

SR_data <- merged_ALL_SR
joined_drought_hay <- left_join(yearly_drought_data, hay_all_stocks_1000t_national, by = c("year")) 

regression_data <- left_join(joined_drought_hay, SR_data, by = c("year", "state", "county")) 
regression_data <- regression_data[!is.infinite(regression_data$stock_rate), ]

# get lagged D values
regression_data_lagged <- regression_data %>%
  arrange(state, county, year) %>% # Ensure data is sorted by state, county, and year
  group_by(state, county) %>% # Group by state and county
  mutate(
    drought_lag1 = lag(total_D, 1), # 1-year lag
    drought_lag2 = lag(total_D, 2), # 2-year lag
    drought_lag3 = lag(total_D, 3), # 3-year lag
    drought_lag4 = lag(total_D, 4), # 4-year lag
    drought_lag5 = lag(total_D, 5)  # 5-year lag
  ) %>%
  ungroup() %>% 
  na.omit()
 

#### 5 LAGS #####
pca <- prcomp(regression_data_lagged[, c("total_D", "drought_lag1", "drought_lag2", "drought_lag3", "drought_lag4", "drought_lag5")], scale. = TRUE)
regression_data_lagged$pca1 <- pca$x[, 1]

reg_5 <- feols(log(stock_rate) ~ pca1 + total_GDD + total_EDD + hay_stock_1000t + hay_stock_1000t^2| county, data = regression_data_lagged)
reg_5

```

### 3. Estimate projected stocking rates

```{r}

## Projected Hay Stocks
state_names <- c(
  AL = "Alabama", AK = "Alaska", AZ = "Arizona", AR = "Arkansas", CA = "California", 
  CO = "Colorado", CT = "Connecticut", DE = "Delaware", FL = "Florida", GA = "Georgia", 
  HI = "Hawaii", ID = "Idaho", IL = "Illinois", IN = "Indiana", IA = "Iowa", 
  KS = "Kansas", KY = "Kentucky", LA = "Louisiana", ME = "Maine", MD = "Maryland", 
  MA = "Massachusetts", MI = "Michigan", MN = "Minnesota", MS = "Mississippi", 
  MO = "Missouri", MT = "Montana", NE = "Nebraska", NV = "Nevada", NH = "New Hampshire", 
  NJ = "New Jersey", NM = "New Mexico", NY = "New York", NC = "North Carolina", 
  ND = "North Dakota", OH = "Ohio", OK = "Oklahoma", OR = "Oregon", PA = "Pennsylvania", 
  RI = "Rhode Island", SC = "South Carolina", SD = "South Dakota", TN = "Tennessee", 
  TX = "Texas", UT = "Utah", VT = "Vermont", VA = "Virginia", WA = "Washington", 
  WV = "West Virginia", WI = "Wisconsin", WY = "Wyoming"
)

# All hat stocks, 1000 tones
hay_all_stocks_1000t <- readxl::read_xlsx("/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/RobustnessCheck/Data/StateHaySupplies.xlsx", sheet = 2, skip = 2)

hay_all_stocks_1000t_2 <- pivot_longer(hay_all_stocks_1000t, cols = -year, names_to = "state", values_to = "hay_stock_1000t") %>% 
  mutate(state = state_names[state])

hay_all_stocks_1000t_2$state <- tolower(hay_all_stocks_1000t_2$state)

hay_all_stocks_1000t_3 <- hay_all_stocks_1000t_2 %>%
  group_by(state) %>%
  mutate(hay_stock_1000t = dplyr::lead(hay_stock_1000t, n = 1)) %>%  # Use lag with negative `n` to act like lead
  ungroup()

hay_all_stocks_1000t_national <- hay_all_stocks_1000t_3 %>% 
  group_by(year) %>% 
  summarize(hay_stock_1000t = mean(hay_stock_1000t, na.rm = TRUE)) 


# Calculate the last 5-year average of non-NA values
last_5_years_avg <- hay_all_stocks_1000t_national %>%
  filter(!is.na(hay_stock_1000t)) %>%
  tail(5) %>%
  summarise(avg = mean(hay_stock_1000t, na.rm = TRUE)) %>%
  pull(avg)

# Create a sequence of missing years (2023 to 2099)
missing_years <- tibble(
  year = 2023:2099,
  hay_stock_1000t = last_5_years_avg
)

# Combine the original data with the missing years
hay_all_stocks_1000t_national_projected <- hay_all_stocks_1000t_national %>%
  bind_rows(missing_years) %>%
  arrange(year)


project_stocking_rate <- function(realization, output_dir, reg_model) {
  # Construct file paths dynamically based on realization number
  file_45_path <- file.path(output_dir, sprintf("Weather_r%02d_4.5.rds", realization))
  file_85_path <- file.path(output_dir, sprintf("Weather_r%02d_8.5.rds", realization))

  # Read RDS files for RCP 4.5 & 8.5
  file_45 <- readRDS(file_45_path)
  file_85 <- readRDS(file_85_path)

  # Filter for growing season (March to October)
  growing_season_data_4.5 <- file_45 %>% filter(month >= 3 & month <= 10)
  growing_season_data_8.5 <- file_85 %>% filter(month >= 3 & month <= 10)

  # Aggregate yearly data
  aggregate_yearly_data <- function(data) {
    data %>%
      group_by(year, STATE_NAME, NAME) %>%
      summarize(
        total_D = sum(monthly_D, na.rm = TRUE),
        total_GDD = sum(monthly_GDD, na.rm = TRUE),
        total_EDD = sum(monthly_EDD, na.rm = TRUE)
      ) %>%
      rename(state = STATE_NAME, county = NAME) %>%
      mutate(
        state = tolower(state),
        county = tolower(county)
      )
  }

  yearly_drought_data_projected_4.5 <- aggregate_yearly_data(growing_season_data_4.5)
  yearly_drought_data_projected_8.5 <- aggregate_yearly_data(growing_season_data_8.5)

  # Merge with hay stocks data
  joined_drought_hay_projected_4.5 <- left_join(yearly_drought_data_projected_4.5, hay_all_stocks_1000t_national_projected, by = "year")
  joined_drought_hay_projected_8.5 <- left_join(yearly_drought_data_projected_8.5, hay_all_stocks_1000t_national_projected, by = "year")

  # Function to generate lagged variables
  add_lagged_variables <- function(data) {
    data %>%
      arrange(state, county, year) %>%
      group_by(state, county) %>%
      mutate(
        drought_lag1 = lag(total_D, 1),
        drought_lag2 = lag(total_D, 2),
        drought_lag3 = lag(total_D, 3),
        drought_lag4 = lag(total_D, 4),
        drought_lag5 = lag(total_D, 5)
      ) %>%
      ungroup() %>%
      na.omit()
  }

  regression_data_lagged_4.5 <- add_lagged_variables(joined_drought_hay_projected_4.5)
  regression_data_lagged_8.5 <- add_lagged_variables(joined_drought_hay_projected_8.5)

  # Apply PCA on lagged drought variables
  apply_pca <- function(data) {
    pca <- prcomp(data[, c("total_D", "drought_lag1", "drought_lag2", "drought_lag3", "drought_lag4", "drought_lag5")], scale. = TRUE)
    data$pca1 <- pca$x[, 1]
    return(data)
  }

  regression_data_lagged_4.5 <- apply_pca(regression_data_lagged_4.5)
  regression_data_lagged_8.5 <- apply_pca(regression_data_lagged_8.5)

  # Predict stocking rate using the regression model
  predict_stocking_rate <- function(data, model) {
    data <- setDT(data)
    data[, log_stock_rate := predict(model, newdata = data)]
    data[, stock_rate := exp(log_stock_rate)]
    return(data)
  }

  Projected_SR_45 <- predict_stocking_rate(regression_data_lagged_4.5, reg_model)
  Projected_SR_85 <- predict_stocking_rate(regression_data_lagged_8.5, reg_model)

  # Compute yearly averages
  compute_yearly_averages <- function(data, scenario) {
    data %>%
      group_by(year) %>%
      summarise(mean_projected_stock_rate = mean(stock_rate, na.rm = TRUE)) %>%
      mutate(scenario = scenario) %>%
      filter(year >= 2020)
  }

  yearly_data_45 <- compute_yearly_averages(Projected_SR_45, "RCP 4.5")
  yearly_data_85 <- compute_yearly_averages(Projected_SR_85, "RCP 8.5")

  # Combine data and save results
  combined_data <- bind_rows(yearly_data_45, yearly_data_85) %>%
    mutate(realization = sprintf("r%02d", realization))

  saveRDS(combined_data, file.path(output_dir, sprintf("SRate_r%02d.rds", realization)))

  cat(sprintf("Stocking rate projections saved for realization r%02d\n", realization))
}

# Example Usage: Run for realizations 1 to 10
output_dir <- "/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2"

for (realization in 1:10) {
  project_stocking_rate(realization, output_dir, reg_5)
}


# Join all realizatino data into 1 and get average Stocking Rates
strate_01 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r01.rds")
strate_02 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r02.rds")
strate_03 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r03.rds")
strate_04 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r04.rds")
strate_05 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r05.rds")
strate_06 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r06.rds")
strate_07 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r07.rds")
strate_08 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r08.rds")
strate_09 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r09.rds")
strate_10 <- readRDS("/Volumes/Extreme SSD/UNL/DWFI/Drought/data/Climate_Projection_2/SRate_r10.rds")

combined_data <- bind_rows(strate_01, strate_02, strate_03, strate_04, strate_05,
                           strate_06, strate_07, strate_08, strate_09, strate_10)

average_stock_rate <- combined_data %>%
  group_by(year, scenario) %>%
  summarise(mean_projected_stock_rate = mean(mean_projected_stock_rate, na.rm = TRUE))

average_stock_rate <- average_stock_rate %>%
  group_by(scenario) %>%
  mutate(smoothed_stock_rate = rollmean(mean_projected_stock_rate, k = 5, fill = NA, align = "center"))


```
