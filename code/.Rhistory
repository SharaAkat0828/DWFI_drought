#     avg_tmin = tmin,
#     avg_tmax = tmax,
#     avg_tmean = tmean,
#     sum_ppt = ppt,
#     monthly_D = sum(D, na.rm = TRUE),
#     monthly_GDD = sum(GDD, na.rm = TRUE),
#     monthly_EDD = sum(EDD, na.rm = TRUE)
#   ), by = .(year, month, NAME, STATE_NAME)]
#
#   return(joined_weather)
# }
#
# merged_data_1981_2020 <- data.frame()
# merged_data_1981_2020 <- lapply(
#   1:nrow(month_year_data),
#   function(x) get_saved_PRISM_DT(x, month_year_data, US_counties)
# )
#
# combined_1981_2020 <- do.call(rbind, merged_data_1981_2020)
#
# saveRDS(
#   combined_1981_2020,
#   paste0("/Volumes/Extreme SSD/UNL/DWFI /data/PRISM_MONTHLY_COMBINED_10_31/", "combined_1981_2020.rds")
# )
drought_final <- readRDS("/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/RobustnessCheck/Data/combined_1981_2020_NEW.rds")
drought_final$D <- -drought_final$D
growing_season_data <- drought_final %>%
filter(month >= 3 & month <= 9)  # Select only March to October
# Aggregate to yearly level
yearly_drought_data <- growing_season_data %>%
group_by(year, STATE_NAME, NAME) %>%  # Group by year, state, and county
summarize(
total_D = sum(D, na.rm = TRUE),  # Total drought index
total_GDD = sum(GDD, na.rm = TRUE),  # Total Growing Degree Days
total_EDD = sum(EDD, na.rm = TRUE)  # Total Extreme Degree Days
) %>%
rename(state = STATE_NAME,
county = NAME) %>%
dplyr::select(year, state, county, total_D, total_GDD, total_EDD)
yearly_drought_data$state <- tolower(yearly_drought_data$state)
yearly_drought_data$county <- tolower(yearly_drought_data$county)
# Assumptions
dressing_pct <- 0.55
AU <- 1000
grazing_months <- 5
# Merge pasturepand and inventory data
merged_ALL <- left_join(pasture_data_ALL, beef_inv, by = c("year", "state", "county"))
# Estimate Stocking rates
merged_ALL_SR <- left_join(merged_ALL, cattle_weight, by = c("year")) %>%
mutate(stock_rate = (beef_inv * mean_live_wt/AU * grazing_months)/pastureland_all_types) %>%
dplyr::filter(year != 1978) %>%
dplyr::select(year, state, county, stock_rate) %>%
na.omit()
SR_data <- merged_ALL_SR
joined_drought_hay <- left_join(yearly_drought_data, hay_all_stocks_1000t_national, by = c("year"))
regression_data <- left_join(joined_drought_hay, SR_data, by = c("year", "state", "county"))
regression_data <- regression_data[!is.infinite(regression_data$stock_rate), ]
# get lagged D values
regression_data_lagged <- regression_data %>%
arrange(state, county, year) %>% # Ensure data is sorted by state, county, and year
group_by(state, county) %>% # Group by state and county
mutate(
drought_lag1 = lag(total_D, 1)
) %>%
ungroup() %>%
na.omit()
#### 1 LAG #####
reg_1lag <- feols(log(stock_rate) ~ total_D + drought_lag1 + total_GDD + total_EDD + hay_stock_1000t| county, data = regression_data_lagged)
reg_1lag
# US_counties <- tigris::counties(state = "US", cb = TRUE) %>%
#   st_as_sf()
#
# # 1981:1991; 1992:2002; 2003:2012; 2013:2020
# month_year_data <- CJ(month = 1:12, year = 2006)
# US_counties_data <- data.table()
#
# temp_base <- 12  # base temperature for GDD calculation
# temp_up <- 31  # threshold temperature for EDD calculation
#
# get_saved_PRISM_DT <- function(i, month_year_data, US_counties) {
#   # i = 1
#   temp_year <- month_year_data[i, year]
#   temp_month <- month_year_data[i, month]
#
#   file_path_ppt <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_ppt_y%d_m%d.rds", temp_year, temp_month)
#   file_path_tmean <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_tmean_y%d_m%d.rds", temp_year, temp_month)
#   file_path_tmax <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_tmax_y%d_m%d.rds", temp_year, temp_month)
#   file_path_tmin <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_tmin_y%d_m%d.rds", temp_year, temp_month)
#
#   cat("Year", temp_year, ", month", temp_month, "\n")
#
#   saved_ppt <- readRDS(file_path_ppt)
#   saved_tmean <- readRDS(file_path_tmean)
#   saved_tmax <- readRDS(file_path_tmax)
#   saved_tmin <- readRDS(file_path_tmin)
#
#   US_counties_sf <- st_transform(US_counties, st_crs(saved_ppt))
#
#   a_ppt <- as.data.table(terra::extract(as(saved_ppt, "SpatRaster"), vect(US_counties_sf)))
#   a_tmean <- as.data.table(terra::extract(as(saved_tmean, "SpatRaster"), vect(US_counties_sf)))
#   a_tmax <- as.data.table(terra::extract(as(saved_tmax, "SpatRaster"), vect(US_counties_sf)))
#   a_tmin <- as.data.table(terra::extract(as(saved_tmin, "SpatRaster"), vect(US_counties_sf)))
#
#   a_ppt_long <- melt(a_ppt, id.vars = "ID", variable.name = "Date", value.name = "ppt") %>%
#     .[, .(ppt = mean(ppt, na.rm = TRUE)), by = .(ID, Date)]
#
#   # a_ppt_long <- melt(setDT(a_ppt), id.vars = "ID", variable.name = "Date", value.name = "ppt")[,
#   #      .(ppt = mean(ppt, na.rm = TRUE)), by = .(ID, Date)]
#
#   a_tmean_long <- melt(a_tmean, id.vars = "ID", variable.name = "Date", value.name = "tmean") %>%
#     .[, .(tmean = mean(tmean, na.rm = TRUE)), by = .(ID, Date)]
#   a_tmax_long <- melt(a_tmax, id.vars = "ID", variable.name = "Date", value.name = "tmax") %>%
#     .[, .(tmax = mean(tmax, na.rm = TRUE)), by = .(ID, Date)]
#   a_tmin_long <- melt(a_tmin, id.vars = "ID", variable.name = "Date", value.name = "tmin") %>%
#     .[, .(tmin = mean(tmin, na.rm = TRUE)), by = .(ID, Date)]
#
#   setkey(a_ppt_long, ID, Date)
#   setkey(a_tmean_long, ID, Date)
#   setkey(a_tmax_long, ID, Date)
#   setkey(a_tmin_long, ID, Date)
#
#   # Joining the data.tables
#   a_long <- merge(a_ppt_long, a_tmean_long, by = c("ID", "Date"), all = TRUE)
#   a_long <- merge(a_long, a_tmax_long, by = c("ID", "Date"), all = TRUE)
#   a_long <- merge(a_long, a_tmin_long, by = c("ID", "Date"), all = TRUE)
#
#   a_long[, Date := as.Date(gsub("date", "", Date))]
#   a_long[, `:=`(month = month(Date), year = year(Date))]
#
#   US_counties_v_1 <- st_as_sf(vect(US_counties_sf)) %>%
#     mutate(ID = seq_len(nrow(.))) %>%
#     as.data.table()
#
#   US_counties_v_1 <- merge(US_counties_v_1, a_long, by = "ID", all.x = TRUE)
#   US_counties_v_1 <- US_counties_v_1[, .(
#     tmin = mean(tmin, na.rm = TRUE),
#     tmax = mean(tmax, na.rm = TRUE),
#     tmean = mean(tmean, na.rm = TRUE),
#     ppt = sum(ppt, na.rm = TRUE)
#   ), by = .(year, month, NAME, STATE_NAME)]
#
#
#   US_counties_v_1[, month_heat_index := (tmean / 5) ^ 1.514]
#
#   US_counties_v_2 <- US_counties_v_1[, .(annual_heat_index = sum(month_heat_index, na.rm = TRUE)), by = .(year, NAME, STATE_NAME)]
#   US_counties_v_2[, a := 675 * 10^(-9) * annual_heat_index^3 - 771 * 10^(-7) * annual_heat_index^2 + 1792 * 10^(-5) * annual_heat_index + 0.49239]
#
#   joined_weather_SPEI <- merge(US_counties_v_1, US_counties_v_2, by = c("year", "NAME", "STATE_NAME"), all.x = TRUE)
#   joined_weather_SPEI[, PET := ifelse(tmean <= 0, 0, 16 * ((10 * tmean) / annual_heat_index) ^ a)]
#   joined_weather_SPEI[, D := ppt - PET]
#
#   joined_weather_SPEI[, Tavg := (tmax + tmin) / 2]
#   joined_weather_SPEI[, GDD := fifelse(Tavg < temp_base, 0,
#                                        fifelse(Tavg > temp_up, temp_up - temp_base,
#                                                Tavg - temp_base))]
#
#   joined_weather_SPEI[, EDD := fifelse(tmax > temp_up, tmax - temp_up, 0)]
#
#   joined_weather <- joined_weather_SPEI[, .(
#     avg_tmin = tmin,
#     avg_tmax = tmax,
#     avg_tmean = tmean,
#     sum_ppt = ppt,
#     monthly_D = sum(D, na.rm = TRUE),
#     monthly_GDD = sum(GDD, na.rm = TRUE),
#     monthly_EDD = sum(EDD, na.rm = TRUE)
#   ), by = .(year, month, NAME, STATE_NAME)]
#
#   return(joined_weather)
# }
#
# merged_data_1981_2020 <- data.frame()
# merged_data_1981_2020 <- lapply(
#   1:nrow(month_year_data),
#   function(x) get_saved_PRISM_DT(x, month_year_data, US_counties)
# )
#
# combined_1981_2020 <- do.call(rbind, merged_data_1981_2020)
#
# saveRDS(
#   combined_1981_2020,
#   paste0("/Volumes/Extreme SSD/UNL/DWFI /data/PRISM_MONTHLY_COMBINED_10_31/", "combined_1981_2020.rds")
# )
drought_final <- readRDS("/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/RobustnessCheck/Data/combined_1981_2020_NEW.rds")
drought_final$D <- -drought_final$D
growing_season_data <- drought_final %>%
filter(month >= 4 & month <= 10)  # Select only March to October
# Aggregate to yearly level
yearly_drought_data <- growing_season_data %>%
group_by(year, STATE_NAME, NAME) %>%  # Group by year, state, and county
summarize(
total_D = sum(D, na.rm = TRUE),  # Total drought index
total_GDD = sum(GDD, na.rm = TRUE),  # Total Growing Degree Days
total_EDD = sum(EDD, na.rm = TRUE)  # Total Extreme Degree Days
) %>%
rename(state = STATE_NAME,
county = NAME) %>%
dplyr::select(year, state, county, total_D, total_GDD, total_EDD)
yearly_drought_data$state <- tolower(yearly_drought_data$state)
yearly_drought_data$county <- tolower(yearly_drought_data$county)
# Assumptions
dressing_pct <- 0.55
AU <- 1000
grazing_months <- 5
# Merge pasturepand and inventory data
merged_ALL <- left_join(pasture_data_ALL, beef_inv, by = c("year", "state", "county"))
# Estimate Stocking rates
merged_ALL_SR <- left_join(merged_ALL, cattle_weight, by = c("year")) %>%
mutate(stock_rate = (beef_inv * mean_live_wt/AU * grazing_months)/pastureland_all_types) %>%
dplyr::filter(year != 1978) %>%
dplyr::select(year, state, county, stock_rate) %>%
na.omit()
SR_data <- merged_ALL_SR
joined_drought_hay <- left_join(yearly_drought_data, hay_all_stocks_1000t_national, by = c("year"))
regression_data <- left_join(joined_drought_hay, SR_data, by = c("year", "state", "county"))
regression_data <- regression_data[!is.infinite(regression_data$stock_rate), ]
# get lagged D values
regression_data_lagged <- regression_data %>%
arrange(state, county, year) %>% # Ensure data is sorted by state, county, and year
group_by(state, county) %>% # Group by state and county
mutate(
drought_lag1 = lag(total_D, 1)
) %>%
ungroup() %>%
na.omit()
#### 1 LAG #####
reg_1lag <- feols(log(stock_rate) ~ total_D + drought_lag1 + total_GDD + total_EDD + hay_stock_1000t| county, data = regression_data_lagged)
reg_1lag
# US_counties <- tigris::counties(state = "US", cb = TRUE) %>%
#   st_as_sf()
#
# # 1981:1991; 1992:2002; 2003:2012; 2013:2020
# month_year_data <- CJ(month = 1:12, year = 2006)
# US_counties_data <- data.table()
#
# temp_base <- 12  # base temperature for GDD calculation
# temp_up <- 31  # threshold temperature for EDD calculation
#
# get_saved_PRISM_DT <- function(i, month_year_data, US_counties) {
#   # i = 1
#   temp_year <- month_year_data[i, year]
#   temp_month <- month_year_data[i, month]
#
#   file_path_ppt <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_ppt_y%d_m%d.rds", temp_year, temp_month)
#   file_path_tmean <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_tmean_y%d_m%d.rds", temp_year, temp_month)
#   file_path_tmax <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_tmax_y%d_m%d.rds", temp_year, temp_month)
#   file_path_tmin <- sprintf("/Volumes/Extreme SSD/UNL/DWFI/data/PRISM_MONTHLY/PRISM_tmin_y%d_m%d.rds", temp_year, temp_month)
#
#   cat("Year", temp_year, ", month", temp_month, "\n")
#
#   saved_ppt <- readRDS(file_path_ppt)
#   saved_tmean <- readRDS(file_path_tmean)
#   saved_tmax <- readRDS(file_path_tmax)
#   saved_tmin <- readRDS(file_path_tmin)
#
#   US_counties_sf <- st_transform(US_counties, st_crs(saved_ppt))
#
#   a_ppt <- as.data.table(terra::extract(as(saved_ppt, "SpatRaster"), vect(US_counties_sf)))
#   a_tmean <- as.data.table(terra::extract(as(saved_tmean, "SpatRaster"), vect(US_counties_sf)))
#   a_tmax <- as.data.table(terra::extract(as(saved_tmax, "SpatRaster"), vect(US_counties_sf)))
#   a_tmin <- as.data.table(terra::extract(as(saved_tmin, "SpatRaster"), vect(US_counties_sf)))
#
#   a_ppt_long <- melt(a_ppt, id.vars = "ID", variable.name = "Date", value.name = "ppt") %>%
#     .[, .(ppt = mean(ppt, na.rm = TRUE)), by = .(ID, Date)]
#
#   # a_ppt_long <- melt(setDT(a_ppt), id.vars = "ID", variable.name = "Date", value.name = "ppt")[,
#   #      .(ppt = mean(ppt, na.rm = TRUE)), by = .(ID, Date)]
#
#   a_tmean_long <- melt(a_tmean, id.vars = "ID", variable.name = "Date", value.name = "tmean") %>%
#     .[, .(tmean = mean(tmean, na.rm = TRUE)), by = .(ID, Date)]
#   a_tmax_long <- melt(a_tmax, id.vars = "ID", variable.name = "Date", value.name = "tmax") %>%
#     .[, .(tmax = mean(tmax, na.rm = TRUE)), by = .(ID, Date)]
#   a_tmin_long <- melt(a_tmin, id.vars = "ID", variable.name = "Date", value.name = "tmin") %>%
#     .[, .(tmin = mean(tmin, na.rm = TRUE)), by = .(ID, Date)]
#
#   setkey(a_ppt_long, ID, Date)
#   setkey(a_tmean_long, ID, Date)
#   setkey(a_tmax_long, ID, Date)
#   setkey(a_tmin_long, ID, Date)
#
#   # Joining the data.tables
#   a_long <- merge(a_ppt_long, a_tmean_long, by = c("ID", "Date"), all = TRUE)
#   a_long <- merge(a_long, a_tmax_long, by = c("ID", "Date"), all = TRUE)
#   a_long <- merge(a_long, a_tmin_long, by = c("ID", "Date"), all = TRUE)
#
#   a_long[, Date := as.Date(gsub("date", "", Date))]
#   a_long[, `:=`(month = month(Date), year = year(Date))]
#
#   US_counties_v_1 <- st_as_sf(vect(US_counties_sf)) %>%
#     mutate(ID = seq_len(nrow(.))) %>%
#     as.data.table()
#
#   US_counties_v_1 <- merge(US_counties_v_1, a_long, by = "ID", all.x = TRUE)
#   US_counties_v_1 <- US_counties_v_1[, .(
#     tmin = mean(tmin, na.rm = TRUE),
#     tmax = mean(tmax, na.rm = TRUE),
#     tmean = mean(tmean, na.rm = TRUE),
#     ppt = sum(ppt, na.rm = TRUE)
#   ), by = .(year, month, NAME, STATE_NAME)]
#
#
#   US_counties_v_1[, month_heat_index := (tmean / 5) ^ 1.514]
#
#   US_counties_v_2 <- US_counties_v_1[, .(annual_heat_index = sum(month_heat_index, na.rm = TRUE)), by = .(year, NAME, STATE_NAME)]
#   US_counties_v_2[, a := 675 * 10^(-9) * annual_heat_index^3 - 771 * 10^(-7) * annual_heat_index^2 + 1792 * 10^(-5) * annual_heat_index + 0.49239]
#
#   joined_weather_SPEI <- merge(US_counties_v_1, US_counties_v_2, by = c("year", "NAME", "STATE_NAME"), all.x = TRUE)
#   joined_weather_SPEI[, PET := ifelse(tmean <= 0, 0, 16 * ((10 * tmean) / annual_heat_index) ^ a)]
#   joined_weather_SPEI[, D := ppt - PET]
#
#   joined_weather_SPEI[, Tavg := (tmax + tmin) / 2]
#   joined_weather_SPEI[, GDD := fifelse(Tavg < temp_base, 0,
#                                        fifelse(Tavg > temp_up, temp_up - temp_base,
#                                                Tavg - temp_base))]
#
#   joined_weather_SPEI[, EDD := fifelse(tmax > temp_up, tmax - temp_up, 0)]
#
#   joined_weather <- joined_weather_SPEI[, .(
#     avg_tmin = tmin,
#     avg_tmax = tmax,
#     avg_tmean = tmean,
#     sum_ppt = ppt,
#     monthly_D = sum(D, na.rm = TRUE),
#     monthly_GDD = sum(GDD, na.rm = TRUE),
#     monthly_EDD = sum(EDD, na.rm = TRUE)
#   ), by = .(year, month, NAME, STATE_NAME)]
#
#   return(joined_weather)
# }
#
# merged_data_1981_2020 <- data.frame()
# merged_data_1981_2020 <- lapply(
#   1:nrow(month_year_data),
#   function(x) get_saved_PRISM_DT(x, month_year_data, US_counties)
# )
#
# combined_1981_2020 <- do.call(rbind, merged_data_1981_2020)
#
# saveRDS(
#   combined_1981_2020,
#   paste0("/Volumes/Extreme SSD/UNL/DWFI /data/PRISM_MONTHLY_COMBINED_10_31/", "combined_1981_2020.rds")
# )
drought_final <- readRDS("/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/RobustnessCheck/Data/combined_1981_2020_NEW.rds")
drought_final$D <- -drought_final$D
growing_season_data <- drought_final %>%
filter(month >= 3 & month <= 10)  # Select only March to October
# Aggregate to yearly level
yearly_drought_data <- growing_season_data %>%
group_by(year, STATE_NAME, NAME) %>%  # Group by year, state, and county
summarize(
total_D = sum(D, na.rm = TRUE),  # Total drought index
total_GDD = sum(GDD, na.rm = TRUE),  # Total Growing Degree Days
total_EDD = sum(EDD, na.rm = TRUE)  # Total Extreme Degree Days
) %>%
rename(state = STATE_NAME,
county = NAME) %>%
dplyr::select(year, state, county, total_D, total_GDD, total_EDD)
yearly_drought_data$state <- tolower(yearly_drought_data$state)
yearly_drought_data$county <- tolower(yearly_drought_data$county)
# Assumptions
dressing_pct <- 0.55
AU <- 1000
grazing_months <- 5
# Merge pasturepand and inventory data
merged_ALL <- left_join(pasture_data_ALL, beef_inv, by = c("year", "state", "county"))
# Estimate Stocking rates
merged_ALL_SR <- left_join(merged_ALL, cattle_weight, by = c("year")) %>%
mutate(stock_rate = (beef_inv * mean_live_wt/AU * grazing_months)/pastureland_all_types) %>%
dplyr::filter(year != 1978) %>%
dplyr::select(year, state, county, stock_rate) %>%
na.omit()
SR_data <- merged_ALL_SR
joined_drought_hay <- left_join(yearly_drought_data, hay_all_stocks_1000t_national, by = c("year"))
regression_data <- left_join(joined_drought_hay, SR_data, by = c("year", "state", "county"))
regression_data <- regression_data[!is.infinite(regression_data$stock_rate), ]
# get lagged D values
regression_data_lagged <- regression_data %>%
arrange(state, county, year) %>% # Ensure data is sorted by state, county, and year
group_by(state, county) %>% # Group by state and county
mutate(
drought_lag1 = lag(total_D, 1)
) %>%
ungroup() %>%
na.omit()
#### 1 LAG #####
reg_1lag <- feols(log(stock_rate) ~ total_D + drought_lag1 + total_GDD + total_EDD + hay_stock_1000t| county, data = regression_data_lagged)
reg_1lag
# load necessary packages/libraries
pacman::p_load(
pacman,
stars, # spatiotemporal data handling
terra, # raster data handling
raster, # raster data handling
sf, # vector data handling
dplyr, # data wrangling
tidyverse,
fixest,
usdarnass,
cubelyr,
flextable,
tigris,
zoo,
SCI,
spei,
purrr,
datatable,
ncdf4,
stringr, # string manipulation
lubridate, # dates handling
data.table, # data wrangling
tidyr, # reshape
tidyUSDA, # download USDA NASS data
keyring, # API key management
FedData, # download Daymet data
daymetr, # download Daymet data
ggplot2, # make maps
tmap, # make maps
future.apply, # parallel processing
CropScapeR, # download CDL data
prism, # download PRISM data
exactextractr # extract raster values to sf
)
rm(list = ls())
# Setting USDA-NASS key
usdarnass::nass_set_key(key = "79F68508-887F-3423-A3EE-F60AB7DFB3AE")
#| echo: false
# PASTURE LAND - from PDFs (before 1997)
### NATIONAL
pasture_land_after1997_National <- readxl::read_xlsx('/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/Data/Data/pasture_data_after1997_National.xlsx') %>%
dplyr::select(., Year, Value)
pasture_land_after1997_National <- rename(pasture_land_after1997_National, year = Year)
pasture_land_after1997_National <- rename(pasture_land_after1997_National, pastureland_all_types = Value)
pasture_land_after1997_National$year <- as.numeric(as.character(pasture_land_after1997_National$year))
pasture_land_after1997_National$pastureland_all_types <- gsub(",", "", pasture_land_after1997_National$pastureland_all_types)
pasture_land_after1997_National$pastureland_all_types <- as.numeric(as.character(pasture_land_after1997_National$pastureland_all_types))
### COUNTY
pasture_land_after1997 <- readxl::read_xlsx('/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/Data/Data/pasture_data_after1997.xlsx') %>%
dplyr::select(., State, County, Year, Value)
pasture_land_after1997 <- rename(pasture_land_after1997, state = State)
pasture_land_after1997 <- rename(pasture_land_after1997, county = County)
pasture_land_after1997 <- rename(pasture_land_after1997, year = Year)
pasture_land_after1997 <- rename(pasture_land_after1997, pastureland_all_types = Value)
pasture_land_before1997 <- readxl::read_xlsx('/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/Data/Data/pasture_data_before1997.xlsx')
pasture_land_before1997$year <- as.numeric(as.character(pasture_land_before1997$year))
pasture_land_before1997$pastureland_all_types <- gsub(",", "", pasture_land_before1997$pastureland_all_types)
pasture_land_before1997$pastureland_all_types <- as.numeric(as.character(pasture_land_before1997$pastureland_all_types))
# Join all PASTURELAND data
pasture_data_ALL <- rbind(pasture_land_before1997, pasture_land_after1997)
pasture_data_ALL$year <- as.numeric(as.character(pasture_data_ALL$year))
pasture_data_ALL$pastureland_all_types <- gsub(",", "", pasture_data_ALL$pastureland_all_types)
pasture_data_ALL$pastureland_all_types <- as.numeric(as.character(pasture_data_ALL$pastureland_all_types))
pasture_data_ALL$state <- tolower(pasture_data_ALL$state)
pasture_data_ALL$county <- tolower(pasture_data_ALL$county)
View(pasture_land_after1997_National)
# PASTURE LAND - from PDFs (before 1997)
### NATIONAL
pasture_land_after1997_National <- readxl::read_xlsx('/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/Data/Data/pasture_data_after1997_National.xlsx') %>%
dplyr::select(., Year, Value)
View(pasture_land_after1997_National)
### COUNTY
pasture_land_after1997 <- readxl::read_xlsx('/Users/sharaakat/Dropbox/akat_shara/DWFI_drought/GitHub/Data/Data/pasture_data_after1997.xlsx') %>%
dplyr::select(., State, County, Year, Value)
View(pasture_land_after1997)
# USDA out weight
OUTWT_USDA_quantity <- usdampr::mpr_request(slugIDs = "2477", report_time = report_time_analysis)$Detail %>%
tidyr::separate(., selling_basis_description, c("selling_type", "selling_transportation")) %>%
dplyr::filter(., class_description == "STEER", grade_description == "Total all grades", selling_type == "LIVE", selling_transportation == "FOB") %>%
dplyr::mutate(., date = {report_date %m-% months(1)}, year = {year(date)}, month = {month(date)}) %>%
dplyr::select(., date, year, month, report_title, class_description, grade_description, selling_type, selling_transportation, head_count, weight_range_avg, weighted_avg_price) %>%
dplyr::arrange(., year, month) %>% dplyr::mutate(., steer_live_OTWT = weight_range_avg) %>%
dplyr::select(., year, month, steer_live_OTWT) %>%
group_by(year, month) %>%
summarize(., steer_live_OTWT = mean(steer_live_OTWT))
# 2. Setting USDA-NASS key: copy and paste your USDA-NASS key below
nassqs_auth(key = "9D9051CD-D01C-3B05-85C3-5FD81DB8F8A4")
# USDA cattle prices
OUTWT_USDA_price <- usdampr::mpr_request(slugIDs = "2477", report_time = report_time_analysis)$Detail %>%
tidyr::separate(., selling_basis_description, c("selling_type", "selling_transportation")) %>%
dplyr::filter(., class_description == "STEER", grade_description == "Total all grades", selling_type == "LIVE", selling_transportation == "FOB") %>%
dplyr::mutate(., date = {report_date %m-% months(1)}, year = {year(date)}, month = {month(date)}) %>%
dplyr::select(., date, year, month, report_title, class_description, grade_description, selling_type, selling_transportation, head_count, weight_range_avg, weighted_avg_price) %>%
dplyr::arrange(., year, month) %>% dplyr::mutate(., steer_live_OTWT_price = weighted_avg_price) %>%
dplyr::select(., year, month, steer_live_OTWT_price) %>%
group_by(year, month) %>%
summarize(., steer_live_OTWT_price = mean(steer_live_OTWT_price))
# Create Master date Data.Frame
begin <- "2000-01-15" %>% as.Date()
end <- Sys.Date()  #Sys.Date() - current system date
report_time_analysis <- paste0(begin, ":", end)
Date <- seq(from = begin, to = as.Date(end), by = "month")
master_df <- data.frame(date = Date) %>%
dplyr::mutate(., year = {year(date)}, month = {month(date)}) %>%
dplyr::select(., year, month)
# OUTWT calculation
# Corn prices
corn_price <- readxl::read_xlsx ("./data/Grain_corn_sorg_wht_prices.xlsx", sheet=6, col_names = TRUE, skip = 8) %>%
dplyr::select(1, 2, 19, 40) %>%
`colnames<-`(c("date", "monthly_average_wheat", 'monthly_average_corn', 'monthly_average_sorghum')) %>%
dplyr::mutate(., year = year(date), month = month(date),
corn_price = {monthly_average_corn/0.56 %>% as.numeric() %>% round(., 2)}) %>%
dplyr::select(., year, month, corn_price)
# USDA cattle prices
OUTWT_USDA_price <- usdampr::mpr_request(slugIDs = "2477", report_time = report_time_analysis)$Detail %>%
tidyr::separate(., selling_basis_description, c("selling_type", "selling_transportation")) %>%
dplyr::filter(., class_description == "STEER", grade_description == "Total all grades", selling_type == "LIVE", selling_transportation == "FOB") %>%
dplyr::mutate(., date = {report_date %m-% months(1)}, year = {year(date)}, month = {month(date)}) %>%
dplyr::select(., date, year, month, report_title, class_description, grade_description, selling_type, selling_transportation, head_count, weight_range_avg, weighted_avg_price) %>%
dplyr::arrange(., year, month) %>% dplyr::mutate(., steer_live_OTWT_price = weighted_avg_price) %>%
dplyr::select(., year, month, steer_live_OTWT_price) %>%
group_by(year, month) %>%
summarize(., steer_live_OTWT_price = mean(steer_live_OTWT_price))
View(OUTWT_USDA_price)
